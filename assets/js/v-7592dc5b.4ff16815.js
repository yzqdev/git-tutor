"use strict";(self.webpackChunkgit_tutor=self.webpackChunkgit_tutor||[]).push([[3265],{8707:(e,i,s)=>{s.r(i),s.d(i,{data:()=>n});const n=JSON.parse('{"key":"v-7592dc5b","path":"/git/git-reset.html","title":"reset命令可以回退版本,区别restore","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"git reset HEAD","slug":"git-reset-head","link":"#git-reset-head","children":[]}],"git":{"createdTime":1668828273000,"updatedTime":1668828273000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":2.22,"words":666},"filePathRelative":"git/git-reset.md","localizedDate":"2022年11月19日","excerpt":""}')},8284:(e,i,s)=>{s.r(i),s.d(i,{default:()=>l});var n=s(6808);const t=[(0,n.uE)('<h1 id="reset命令可以回退版本-区别restore" tabindex="-1"><a class="header-anchor" href="#reset命令可以回退版本-区别restore" aria-hidden="true">#</a> reset命令可以回退版本,区别restore</h1><p>git reset 命令用于回退版本，可以指定退回某一次提交的版本。</p><p>git reset 命令语法格式如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git reset [--soft | --mixed | --hard] [HEAD]\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>--mixed</strong> 为默认，可以不用带该参数，用于重置暂存区的文件与上一次的提交(commit)保持一致，工作区文件内容保持不变。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git reset  [HEAD] \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>实例：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git reset HEAD^            # 回退所有内容到上一个版本  \ngit reset HEAD^ hello.php  # 回退 hello.php 文件的版本到上一个版本  \ngit  reset  052e           # 回退到指定版本\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>--soft</strong> 参数用于回退到某个版本：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git reset --soft HEAD\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>实例：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git reset --soft HEAD~3   # 回退上上上一个版本 \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>--hard</strong> 参数撤销工作区中所有未提交的修改内容，将暂存区与工作区都回到上一次版本，并删除之前的所有信息提交：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git reset --hard HEAD\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>实例：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git reset --hard HEAD~3  # 回退上上上一个版本  \ngit reset –hard bae128  # 回退到某个版本回退点之前的所有信息。 \ngit reset --hard origin/master    # 将本地的状态回退到和远程的一样 \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>**注意：**谨慎使用 <strong>–-hard</strong> 参数，它会删除回退点之前的所有信息。</p><p><strong>HEAD 说明：</strong></p><ul><li><p>HEAD 表示当前版本</p></li><li><p>HEAD^ 上一个版本</p></li><li><p>HEAD^^ 上上一个版本</p></li><li><p>HEAD^^^ 上上上一个版本</p></li><li><p>以此类推...</p></li></ul><p>可以使用 ～数字表示</p><ul><li><p>HEAD~0 表示当前版本</p></li><li><p>HEAD~1 上一个版本</p></li><li><p>HEAD^2 上上一个版本</p></li><li><p>HEAD^3 上上上一个版本</p></li><li><p>以此类推...</p></li></ul><h3 id="git-reset-head" tabindex="-1"><a class="header-anchor" href="#git-reset-head" aria-hidden="true">#</a> git reset HEAD</h3><p>git reset HEAD 命令用于取消已缓存的内容。</p><p>我们先改动文件 README 文件，内容如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># Runoob Git 测试\n# 菜鸟教程 \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>hello.php 文件修改为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;?php\necho &#39;菜鸟教程：www.runoob.com&#39;;\necho &#39;菜鸟教程：www.runoob.com&#39;;\necho &#39;菜鸟教程：www.runoob.com&#39;;\n?&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在两个文件修改后，都提交到了缓存区，我们现在要取消其中一个的缓存，操作如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ git status -s\n    M README\n    M hello.php\n$ git add .\n$ git status -s\nM  README\nM  hello.php\n$ git reset HEAD hello.php \nUnstaged changes after reset:\nM    hello.php\n$ git status -s\nM  README\n    M hello.php\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在你执行 git commit，只会将 README 文件的改动提交，而 hello.php 是没有的。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ git commit -m &#39;修改&#39;\n[master f50cfda] 修改\n    1 file changed, 1 insertion(+)\n$ git status -s\n    M hello.php\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到 hello.php 文件的修改并未提交。</p><p>这时我们可以使用以下命令将 hello.php 的修改提交：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ git commit -am &#39;修改 hello.php 文件&#39;\n[master 760f74d] 修改 hello.php 文件\n    1 file changed, 1 insertion(+)\n$ git status\nOn branch master\nnothing to commit, working directory clean\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>简而言之，执行 git reset HEAD 以取消之前 git add 添加，但不希望包含在下一提交快照中的缓存。</p>',35)],d={},l=(0,s(8580).Z)(d,[["render",function(e,i){return(0,n.wg)(),(0,n.iD)("div",null,t)}]])},8580:(e,i)=>{i.Z=(e,i)=>{const s=e.__vccOpts||e;for(const[e,n]of i)s[e]=n;return s}}}]);