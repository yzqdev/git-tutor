"use strict";(self.webpackChunkgit_tutor=self.webpackChunkgit_tutor||[]).push([[9355],{5543:(s,e,a)=>{a.r(e),a.d(e,{data:()=>n});const n=JSON.parse('{"key":"v-33243040","path":"/github/use-github-in-wsl.html","title":"wsl访问github","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"wsl关闭autogen hosts","slug":"wsl关闭autogen-hosts","link":"#wsl关闭autogen-hosts","children":[]}],"git":{"createdTime":1661668844000,"updatedTime":1661668844000,"contributors":[{"name":"yzqdev","email":"yzqdev@outlook.com","commits":1}]},"readingTime":{"minutes":0.38,"words":113},"filePathRelative":"github/use-github-in-wsl.md","localizedDate":"2022年8月28日","excerpt":""}')},7453:(s,e,a)=>{a.r(e),a.d(e,{default:()=>l});var n=a(6808);const t=[(0,n.uE)('<h1 id="wsl访问github" tabindex="-1"><a class="header-anchor" href="#wsl访问github" aria-hidden="true">#</a> wsl访问github</h1><h2 id="wsl关闭autogen-hosts" tabindex="-1"><a class="header-anchor" href="#wsl关闭autogen-hosts" aria-hidden="true">#</a> wsl关闭autogen hosts</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 打开/etc/hosts</span>\n<span class="token comment"># This file was automatically generated by WSL. To stop automatic generation of this file, add the following entry to /etc/wsl.conf:</span>\n<span class="token comment"># [network]</span>\n<span class="token comment"># generateHosts = false</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加<code>/etc/wsl.conf</code>然后重启电脑(重启wsl) 设置hosts写入权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>\n<span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token number">777</span> /etc/hosts\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在~目录添加一个<code>github.sh</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&quot;/# GitHub520 Host Start/Q&quot;</span> /etc/hosts <span class="token operator">&amp;&amp;</span> <span class="token function">curl</span> https://raw.hellogithub.com/hosts <span class="token operator">&gt;&gt;</span> /etc/hosts\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最后设置cron命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">crontab</span> <span class="token parameter variable">-e</span>\n\n<span class="token comment"># 写入文件</span>\n<span class="token comment">#(每1小时执行一次github.sh)</span>\n<span class="token number">0</span> */1 * * *  ~/github.sh\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',9)],i={},l=(0,a(8580).Z)(i,[["render",function(s,e){return(0,n.wg)(),(0,n.iD)("div",null,t)}]])},8580:(s,e)=>{e.Z=(s,e)=>{const a=s.__vccOpts||s;for(const[s,n]of e)a[s]=n;return a}}}]);